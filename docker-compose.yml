services:
    chat_app:
        build:
            context: .
            dockerfile: docker/Dockerfile
        container_name: chat_app
        restart: unless-stopped
        volumes:
            - .:/var/www:cached
        networks:
            - chat_app_network
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        ports:
            - "9000:9000"
    #        command: >
    #            sh -c "php artisan reverb:start && php artisan queue:listen"

    postgres:
        image: postgres:14-alpine
        container_name: chat_postgres
        restart: unless-stopped
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - chat_app_network
        ports:
            - "5433:5432"  # Expose PostgreSQL on port 5433 on host to avoid conflict
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
            interval: 10s
            timeout: 5s
            retries: 5

    pgadmin:
        image: dpage/pgadmin4
        container_name: chat_pgadmin
        restart: unless-stopped
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        ports:
            - "8082:80"
        depends_on:
            postgres:
                condition: service_healthy
        networks:
            - chat_app_network

    nginx:
        container_name: chat_nginx
        image: nginx:stable-alpine  # Use the Nginx image
        ports:
            - "8080:80"  # Map port 8080 on the host to port 80 inside the container
        volumes:
            - .:/var/www:cached  # Mount the Laravel chat_application directory
            - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf  # Use our Nginx config
        depends_on:
            chat_app:
                condition: service_started
        networks:
            - chat_app_network  # Connect to the custom network
        restart: unless-stopped

    node:
        image: node:20-alpine
        container_name: chat_node
        working_dir: /var/www
        volumes:
            - .:/var/www:cached
        tty: true
        ports:
            - "5173:5173"  # For Vite development server
        environment:
            - NODE_ENV=development
        command: >
            sh -c "npm install && npm run dev"
        networks:
            - chat_app_network
        restart: unless-stopped

    redis:
        image: redis:alpine
        container_name: websocket_redis
        ports:
            - "1234:4321"
        volumes:
            - redis-data:/data
        networks:
            - chat_app_network
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5

volumes:
    postgres_data:
    redis-data:

networks:
    chat_app_network:
        driver: bridge
